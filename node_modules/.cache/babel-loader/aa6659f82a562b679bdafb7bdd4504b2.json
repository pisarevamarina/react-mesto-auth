{"ast":null,"code":"export default class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Упс! Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then(this._getResponseData);\n  }\n\n  postUserCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    }).then(this._getResponseData);\n  }\n\n  editUserInfo({\n    name,\n    about\n  }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponseData);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this.headers\n    }).then(this._getResponseData);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._getResponseData);\n  }\n\n  changeAvatar({\n    avatar\n  }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponseData);\n  }\n\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: 'aa64054e-de41-439a-90ae-ddf7c127f70d',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/marinapisareva/Desktop/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","constructor","options","baseUrl","headers","_getResponseData","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","postUserCard","name","link","method","body","JSON","stringify","getUserInfo","editUserInfo","about","changeLikeCardStatus","cardId","isLiked","deleteCard","changeAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["export default class Api {\n    constructor (options) {\nthis.baseUrl =  options.baseUrl;\nthis.headers = options.headers;\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Упс! Ошибка: ${res.status}`)\n      }\n\n    getInitialCards() {\n        return fetch (`${this.baseUrl}/cards`, {\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n\n    postUserCard ({name, link}){\n        return fetch (`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers, \n            body: JSON.stringify({\n             name, link\n            })\n        })\n        .then(this._getResponseData);\n    }\n\n    getUserInfo() {\n        return fetch (`${this.baseUrl}/users/me`, {\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n}\n\n    editUserInfo({name, about}) {\n        return fetch (`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n            name, about\n              })\n\n        })\n        .then(this._getResponseData);\n\n    }\n\n    changeLikeCardStatus (cardId, isLiked) {\n        return fetch (`${this.baseUrl}/cards/likes/${cardId}`, {\n          method: isLiked ? 'PUT' : 'DELETE',\n          headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n\n    deleteCard(cardId) {\n        return fetch (`${this.baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n\n    changeAvatar({avatar}) {\n        return fetch (`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({avatar})\n        })\n        .then(this._getResponseData);\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n      authorization: 'aa64054e-de41-439a-90ae-ddf7c127f70d',\n      'Content-Type': 'application/json',\n    },\n  });"]},"metadata":{},"sourceType":"module"}