{"ast":null,"code":"import _classCallCheck from\"/Users/marinapisareva/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/marinapisareva/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.baseUrl=options.baseUrl;this.headers=options.headers;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u0423\\u043F\\u0441! \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:this.headers}).then(this._getResponseData);}},{key:\"postUserCard\",value:function postUserCard(_ref){var name=_ref.name,link=_ref.link;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:'POST',headers:this.headers,body:JSON.stringify({name:name,link:link})}).then(this._getResponseData);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{headers:this.headers}).then(this._getResponseData);}},{key:\"editUserInfo\",value:function editUserInfo(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({name:name,about:about})}).then(this._getResponseData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){return fetch(\"\".concat(this.baseUrl,\"/cards/likes/\").concat(cardId),{method:isLiked?'PUT':'DELETE',headers:this.headers}).then(this._getResponseData);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this.headers}).then(this._getResponseData);}},{key:\"changeAvatar\",value:function changeAvatar(_ref3){var avatar=_ref3.avatar;return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({avatar:avatar})}).then(this._getResponseData);}}]);return Api;}();export{Api as default};export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-14',headers:{authorization:'aa64054e-de41-439a-90ae-ddf7c127f70d','Content-Type':'application/json'}});","map":{"version":3,"sources":["/Users/marinapisareva/Desktop/dev/mesto-react/src/utils/Api.js"],"names":["Api","options","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","name","link","method","body","JSON","stringify","about","cardId","isLiked","avatar","api","authorization"],"mappings":"yUAAqBA,CAAAA,G,yBACjB,aAAaC,OAAb,CAAsB,2BAC1B,KAAKC,OAAL,CAAgBD,OAAO,CAACC,OAAxB,CACA,KAAKC,OAAL,CAAeF,OAAO,CAACE,OAAvB,CACK,C,0EAEgBC,G,CAAK,CAClB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,qEAA+BJ,GAAG,CAACK,MAAnC,EAAP,CACD,C,yDAEe,CACd,MAAOC,CAAAA,KAAK,WAAK,KAAKR,OAAV,WAA2B,CACnCC,OAAO,CAAE,KAAKA,OADqB,CAA3B,CAAL,CAGNQ,IAHM,CAGD,KAAKC,gBAHJ,CAAP,CAIH,C,uDAE0B,IAAZC,CAAAA,IAAY,MAAZA,IAAY,CAANC,IAAM,MAANA,IAAM,CACvB,MAAOJ,CAAAA,KAAK,WAAK,KAAKR,OAAV,WAA2B,CACnCa,MAAM,CAAE,MAD2B,CAEnCZ,OAAO,CAAE,KAAKA,OAFqB,CAGnCa,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACpBL,IAAI,CAAJA,IADoB,CACdC,IAAI,CAAJA,IADc,CAAf,CAH6B,CAA3B,CAAL,CAONH,IAPM,CAOD,KAAKC,gBAPJ,CAAP,CAQH,C,iDAEa,CACV,MAAOF,CAAAA,KAAK,WAAK,KAAKR,OAAV,cAA8B,CACtCC,OAAO,CAAE,KAAKA,OADwB,CAA9B,CAAL,CAGNQ,IAHM,CAGD,KAAKC,gBAHJ,CAAP,CAIP,C,wDAE+B,IAAdC,CAAAA,IAAc,OAAdA,IAAc,CAARM,KAAQ,OAARA,KAAQ,CACxB,MAAOT,CAAAA,KAAK,WAAK,KAAKR,OAAV,cAA8B,CACtCa,MAAM,CAAE,OAD8B,CAEtCZ,OAAO,CAAE,KAAKA,OAFwB,CAGtCa,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACrBL,IAAI,CAAJA,IADqB,CACfM,KAAK,CAALA,KADe,CAAf,CAHgC,CAA9B,CAAL,CAQNR,IARM,CAQD,KAAKC,gBARJ,CAAP,CAUH,C,kEAEqBQ,M,CAAQC,O,CAAS,CACnC,MAAOX,CAAAA,KAAK,WAAK,KAAKR,OAAV,yBAAiCkB,MAAjC,EAA2C,CACrDL,MAAM,CAAEM,OAAO,CAAG,KAAH,CAAW,QAD2B,CAErDlB,OAAO,CAAE,KAAKA,OAFuC,CAA3C,CAAL,CAINQ,IAJM,CAID,KAAKC,gBAJJ,CAAP,CAKH,C,8CAEUQ,M,CAAQ,CACf,MAAOV,CAAAA,KAAK,WAAK,KAAKR,OAAV,mBAA2BkB,MAA3B,EAAqC,CAC7CL,MAAM,CAAE,QADqC,CAE7CZ,OAAO,CAAE,KAAKA,OAF+B,CAArC,CAAL,CAINQ,IAJM,CAID,KAAKC,gBAJJ,CAAP,CAKH,C,wDAEsB,IAATU,CAAAA,MAAS,OAATA,MAAS,CACnB,MAAOZ,CAAAA,KAAK,WAAK,KAAKR,OAAV,qBAAqC,CAC7Ca,MAAM,CAAE,OADqC,CAE7CZ,OAAO,CAAE,KAAKA,OAF+B,CAG7Ca,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACI,MAAM,CAANA,MAAD,CAAf,CAHuC,CAArC,CAAL,CAKNX,IALM,CAKD,KAAKC,gBALJ,CAAP,CAMH,C,0BA1EgBZ,G,aA6ErB,MAAO,IAAMuB,CAAAA,GAAG,CAAG,GAAIvB,CAAAA,GAAJ,CAAQ,CACvBE,OAAO,CAAE,6CADc,CAEvBC,OAAO,CAAE,CACPqB,aAAa,CAAE,sCADR,CAEP,eAAgB,kBAFT,CAFc,CAAR,CAAZ","sourcesContent":["export default class Api {\n    constructor (options) {\nthis.baseUrl =  options.baseUrl;\nthis.headers = options.headers;\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Упс! Ошибка: ${res.status}`)\n      }\n\n    getInitialCards() {\n        return fetch (`${this.baseUrl}/cards`, {\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n\n    postUserCard ({name, link}){\n        return fetch (`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers, \n            body: JSON.stringify({\n             name, link\n            })\n        })\n        .then(this._getResponseData);\n    }\n\n    getUserInfo() {\n        return fetch (`${this.baseUrl}/users/me`, {\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n}\n\n    editUserInfo({name, about}) {\n        return fetch (`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n            name, about\n              })\n\n        })\n        .then(this._getResponseData);\n\n    }\n\n    changeLikeCardStatus (cardId, isLiked) {\n        return fetch (`${this.baseUrl}/cards/likes/${cardId}`, {\n          method: isLiked ? 'PUT' : 'DELETE',\n          headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n\n    deleteCard(cardId) {\n        return fetch (`${this.baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n        .then(this._getResponseData);\n    }\n\n    changeAvatar({avatar}) {\n        return fetch (`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({avatar})\n        })\n        .then(this._getResponseData);\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n      authorization: 'aa64054e-de41-439a-90ae-ddf7c127f70d',\n      'Content-Type': 'application/json',\n    },\n  });"]},"metadata":{},"sourceType":"module"}